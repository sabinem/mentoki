from rest_framework import viewsets
from rest_framework import generics
from rest_framework import permissions
from rest_framework import renderers
from rest_framework.response import Response

from ..serializers import *
from apps_data.course.models import Course
from django.contrib.auth.models import User
from ..permissions import *


from rest_framework.decorators import detail_route

class CourseViewSet(viewsets.ModelViewSet):
    """
    This viewset automatically provides `list`, `create`, `retrieve`,
    `update` and `destroy` actions.

    Additionally we also provide an extra `highlight` action.
    """
    permission_classes = (CourseIsOwnerOrReadOnly,)
    serializer_class = CourseCompleteSerializer
    queryset = Course.objects.all()

    def get_queryset(self, **kwargs):
        if self.request.user.is_staff:
            return Course.objects.all()
        else:
            return Course.objects.teaching(user=self.request.user)