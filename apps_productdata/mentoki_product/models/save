    def available_with_past_orders(self, ordered_products=None):
        """
        checks for a given courseproduct and course whether it can be
        booked by a customer
        return ProductToCustomerStatus
        """
        # if no products have been orded then the product is available
        # if it has no dependencies
        if not ordered_products:
            if self.dependency:
                return ProductToCustomer.NOT_AVAILABLE
        else:
        # case ordered products exists
            if self in ordered_products:
                # product has been already ordered
                return ProductToCustomer.NOT_AVAILABLE
            else:
                if self.dependency and not self.dependency in ordered_products:
                    # dependencies are not fullfilled
                    return ProductToCustomer.NOT_AVAILABLE
                for item in ordered_products:
                    if item.part_of == self:
                        # if parts of the products have been bought already
                        return ProductToCustomer.NOT_AVAILABLE
                if self.part_of in ordered_products:
                    # the whole of which the product is a part of has already
                    # been bought
                    return ProductToCustomer.NOT_AVAILABLE
        return ProductToCustomer.AVAILABLE