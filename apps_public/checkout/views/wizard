from django.http import HttpResponseRedirect
from formtools.wizard.views import SessionWizardView

class ContactWizard(SessionWizardView):
    def done(self, form_list, **kwargs):
        #do_something_with_the_form_data(form_list)
        user = form_dict['user'].save()
        credit_card = form_dict['credit_card'].save()
        # ...
        return HttpResponseRedirect('/page-to-redirect-to-when-done/')

FORMS = [("address", myapp.forms.AddressForm),
         ("paytype", myapp.forms.PaymentChoiceForm),
         ("cc", myapp.forms.CreditCardForm),
         ("confirmation", myapp.forms.OrderForm)]

TEMPLATES = {"address": "checkout/billingaddress.html",
             "paytype": "checkout/paymentmethod.html",
             "cc": "checkout/creditcard.html",
             "confirmation": "checkout/confirmation.html"}




class PaymentForm1(forms.Form):
    """
    Participant data
    """
    username = forms.CharField(max_length=100)
    email = forms.EmailField()

class PaymentForm2(forms.Form):
    """
    Information for the payer
    """
    payment_name = forms.CharField


class TestWizard(NamedUrlSessionWizardView):
    form_list = [PaymentForm1, PaymentForm2]

    def done(self, form_list, form_dict, **kwargs):
        return render_to_response('done.html', {
            'form_data': [form.cleaned_data for form in form_list],
        })


    def clean_display(self):
            """
            it is checked that at least one teacher will be publically visible
            """
            display = self.cleaned_data["display"]
            if not display:
                if not CourseOwner.objects.other_teachers_for_display(
                        course=self.instance.course,
                        user=self.instance.user):
                    raise ValidationError('''Wenigstens ein Lehrerprofil pro
                    Kurs muss in der Kurs-Ausschreibung
                    angezeigt werden.''')
            return self.cleaned_data["display"]


    def clean_text(self):
        """
        If somebody enters into this form ' hello ',
        the extra whitespace will be stripped.
        """
        return self.cleaned_data.get('text', '')

    def clean_email(self):
        """
        If somebody enters into this form ' hello ',
        the extra whitespace will be stripped.
        """
        return self.cleaned_data.get('title', '')

    def clean(self):
        """
        If somebody enters into this form ' hello ',
        the extra whitespace will be stripped.
        """
        return self.cleaned_data
